# SPDX-FileCopyrightText: openmod-features contributors
#
# SPDX-License-Identifier: CC0-1.0

name: Update CODEOWNERS

on:
  push:
    branches:
      - main
    paths:
      - "tools/**/.metadata.yml"
      - ".github/workflows/update-codeowners.yml"
      - ".github/CODEOWNERS"
  workflow_dispatch: # Allow manual trigger

jobs:
  update-codeowners:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate CODEOWNERS
        run: |
          # Extract existing header from CODEOWNERS file (everything up to and including the "respective feature lists" comment)
          sed -n '1,/# These owners will be the owners for their respective feature lists./p' .github/CODEOWNERS > .github/CODEOWNERS.tmp

          # Find all .metadata.yml files and extract maintainers
          find tools -name '.metadata.yml' -type f | sort | while read -r metadata_file; do
            # Extract maintainers using grep and sed
            maintainers=$(grep '^maintainers:' "$metadata_file" | sed 's/maintainers: *//')

            # Get the directory path
            tool_dir=$(dirname "$metadata_file")

            # Convert comma-separated maintainers to @-prefixed handles
            # Remove spaces, split by comma, add @ prefix
            github_handles=$(echo "$maintainers" | tr ',' '\n' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//' | sed 's/^/@/' | tr '\n' ' ' | sed 's/ $//')

            # Format the entry with proper spacing
            printf "%-30s %s\n" "/$tool_dir/" "$github_handles" >> .github/CODEOWNERS.tmp

          done

          # Replace the original CODEOWNERS file
          mv .github/CODEOWNERS.tmp .github/CODEOWNERS

          echo "CODEOWNERS file updated"
          cat .github/CODEOWNERS

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet .github/CODEOWNERS; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes to CODEOWNERS file"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "CODEOWNERS file has changes"
          fi

      - name: Generate summary
        id: generate_summary
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          tools=$(find tools -name '.metadata.yml' -type f | sort | while read -r f; do dirname "$f"; done | tr '\n' ',' | sed 's/,$//')
          echo "tools=$tools" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.check_changes.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: |
            chore: Update CODEOWNERS from tool metadata

            Auto-generated by update-codeowners workflow
          branch: update-codeowners
          delete-branch: true
          title: 'chore: Update CODEOWNERS from tool metadata'
          body: |
            ## Automated CODEOWNERS Update

            This PR updates the CODEOWNERS file based on the maintainers listed in the tool metadata files (`tools/**/.metadata.yml`).

            ### Changes

            The following tool directories have been processed:

            ```
            ${{ steps.generate_summary.outputs.tools }}
            ```

            ### How it works

            - Extracts the `maintainers` field from each `tools/**/.metadata.yml` file
            - Generates CODEOWNERS entries mapping tool directories to their maintainers
            - Preserves the existing header section of CODEOWNERS

            **This PR was automatically created by the `update-codeowners` workflow.**
          labels: |
            automated
            chore
          draft: false
